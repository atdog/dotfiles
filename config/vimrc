""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" vundle settings
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
filetype off
call plug#begin('~/.vim/plugged')

" source code
Plug 'ronakg/quickr-cscope.vim'
Plug 'scrooloose/nerdtree'
Plug 'jistr/vim-nerdtree-tabs'
Plug 'scrooloose/nerdcommenter'
Plug 'bronson/vim-trailing-whitespace'
Plug 'tpope/vim-endwise'
Plug 'valloric/YouCompleteMe'
" airline
Plug 'bling/vim-airline'
Plug 'vim-airline/vim-airline-themes'
Plug 'tpope/vim-fugitive'

call plug#end()
filetype plugin indent on

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" common options
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Set <LEADER>
let mapleader = "\<tab>"
" Syntax enable
syntax on
set synmaxcol=120
" Get out of VI's compatible mode
set nocompatible
" Set line number
set nu
set foldcolumn=3
" 256 colors
set t_Co=256
" Set tab
" Replace tab with space
set expandtab
" Set tab to 4 space
set tabstop=4
" To change the number of space characters inserted for indentation
set shiftwidth=4
" Start searching when you type the first character of the search string
set incsearch
" Sets how many lines of history VIM have to remember
set history=400
" Ignore case in searching
set ignorecase
" Show matching braces
set showmatch
" Set to auto read when a file is changed from the outside
set autoread
" Set backspace
" set backspace=start,indent,eol
set backspace=start,indent
" Set magic on
set magic
" Indent
set ai
set cindent
" True colors
set termguicolors     " enable true colors support
colorscheme jellybeans

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Key mapping
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
nmap <C-N> :tabnew<CR>
nmap <C-H> :tabprev <CR>
nmap <C-L> :tabnext<CR>
imap <C-A> <HOME>
imap <C-E> <END>
nmap <C-K> ddkP
nmap <C-J> ddp
nmap <LEADER>j o<ESC>
nmap <LEADER>k O<ESC>

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Line number map
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
nmap <LEADER>l :call ShowLineNumber()<CR>
function! ShowLineNumber()
    if(&nu == 1)
        set nu!
        set foldcolumn=0
        echo "Line number disable"
    else
        set nu!
        set foldcolumn=3
        echo "Line number enable"
    endif
endfunction

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Mouse map
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
nmap <LEADER>m :let &mouse=(&mouse == "a"?"":"a")<CR>:call ShowMouseMode()<CR>
function! ShowMouseMode()
    if (&mouse == 'a')
        echo "Mouse enable"
    else
        echo "Mouse disable"
    endif
endfunction

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" When editing a file, always jump to the last known cursor position.
" Don’t do it when the position is invalid or when inside an event handlen
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
autocmd BufReadPost *
    \ if line("'\"") > 0 && line("'\"") <= line("$") |
    \     execute "normal g`\"" |
    \ endif

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Auto reload vimrc
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
autocmd! BufWritePost *vimrc source %

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Set filetype depend on the filename extension
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
autocmd BufNewFile,BufRead *.ros set ft=php
autocmd BufNewFile,BufRead *.h set ft=c

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"   Backup
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Set backup directory
set backup
"  Where to put backup file
set backupdir=~/.vim/backup
" Directory for temp file
set directory=~/.vim/temp

set nowritebackup
set noswapfile
" Undo
set undodir=~/.vim/undo/
set undofile

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" air line
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
let g:airline_theme='jellybeans'
let g:airline#extensions#tabline#enabled = 1
let g:airline_powerline_fonts = 1
let g:airline#extensions#tabline#tab_nr_type = 1

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" cscope
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" 使用 cscope 作为 tags 命令
set cscopetag
" 使用 gtags-cscope 代替 cscope
set cscopeprg='gtags-cscope'

let g:quickr_cscope_program = "gtags-cscope"
let g:quickr_cscope_db_file = "GTAGS"
let g:quickr_cscope_use_qf_g = 1

nmap <C-T> <C-O>
nmap <S-N> :cnext<CR>
nmap <S-P> :cprevious<CR>

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" YCM
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
set completeopt-=preview

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" NERD tree tab
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
noremap ,n :NERDTreeTabsToggle<CR>

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Encoding setup
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" 啟動後是使用 utf-8 編碼
set encoding=utf-8
" 新開的檔案預設是 utf-8 編碼
set fileencoding=utf-8
" 所有可能的檔案編碼
set fileencodings=utf-8,big5,euc-jp,gbk,euc-kr,utf-bom,iso8859-1
" 設定輸出到 terminal 的編碼
set termencoding=utf-8
" 將 unicode 中不確定的字符表示成雙字符，在 unicode 下才有用
"set ambiwidth=double

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Mac Stuff
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
let s:uname = system("uname")
if s:uname == "Darwin\n"
    " Do Mac stuff here
    nmap <LEADER>p V:!pbpaste<CR>
    nmap <LEADER>y :.w !pbcopy<CR><CR>
    vmap <LEADER>y :w !pbcopy<CR><CR>
else
    nmap <LEADER>p :set paste!<CR>
endif

" The Vim documentation suggests adding set secure as the last line in your
" vimrc.
set secure
